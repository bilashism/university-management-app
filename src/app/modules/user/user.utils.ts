import { User } from './user.model';

/**
 * This function finds the ID of the last user created in a MongoDB database using Mongoose.
 * @returns The function `findLastUserId` returns the `id` of the most recently created user in the
 * database. If there are no users in the database, it will return `undefined`.
 */
export const findLastUserId = async () => {
  const lastUser = await User.findOne({}, { id: 1, _id: 0 })
    .sort({
      createdAt: -1,
    })
    .lean();

  return lastUser?.id;
};

/**
 * This TypeScript function generates a new user ID by incrementing the last user ID found in the
 * database.
 * @returns The function `generateUserId` returns a Promise that resolves to a string representing the
 * next available user ID. The user ID is generated by finding the last user ID in the database (using
 * the `findLastUserId` function), incrementing it by 1, and padding it with leading zeros to ensure it
 * is 5 digits long.
 */
export const generateUserId = async () => {
  const currentId = (await findLastUserId()) || (0).toString().padStart(5, '0'); //00000
  //increment by 1
  const incrementedId = (parseInt(currentId) + 1).toString().padStart(5, '0');
  return incrementedId;
};
